주석문: 
	//이 문장은 한 줄 끝까지 컴파일러가 무시합니다.
	/* 슬래시 사이의 문장을 컴파일러가 무시합니다. */\

main() 함수: C++ 프로그램 실행의 시작점
	int main() {
		return 0;  //메인 함수만 예외적으로 생략 가능
	}

main() 함수의 리턴값은 부모 프로그램에 전달되는데, 대부분의 경우 이는 운영체제임

#include <iostream>: 전처리기에 대한 지시문으로 컴파일 전 전처리기를 호출하여 소스 파일에 헤더파일을 삽입함. iostream은 C++ 표준 입출력을 위한 클래스와 객체가 선언되어 있음

cout: C++ 표준 출력 스트림 객체
<<: 스트림 삽입 연산자로, 정수를 왼쪽으로 시프트하는 C++의 기본 연산자에서 재정의됨

std::cout << "cout과" << "연산자를 사용해서 여러 개의 데이터 출력 가능";
std::cout << "\n과" << std::endl << "은 줄바꿈 입니다.";

namespace 사용을 통해 동일한 이름에 대하여 충돌을 방지 가능
	namespace A { int value = 10; }
	namespace B { int value = 20; }
	int main() { std::cout << A::value << B::value;}

using 지시어 사용을 통해 이름 공간 접두어(std:: 등) 생략 가능
	using namespace std;
	using std::cout;
	using LL = long long;

cin: C++ 표준 입력 스트림 객체
>>: 스트림 추출 연산자, 왼쪽 스트림 객체에서 데이터를 읽어서 오른쪽 변수에 삽입

유저가 입력한 값은 cin의 스트림 버퍼에 저장이 되고 Enter키 입력 후 버퍼의 내용을 변수에 저장

문자열: 하나 이상의 문자들이 연속적으로 나열된 데이터, C++의 기본 데이터 타입은 아님
	C-스트링 (C언어에서 문자열을 표현하는 방법)
	string 클래스 (문자열을 객체로 다루는 방법)

 C-스트링: 널문자('\0' 또는 0)로 끝나는 char 배열
	char str[9] = {'C', '-', 's', 't', 'r', 'i', 'n', 'g', '\0' };
	char str[9] = "C-string";
	char str[] = "C-string";

#include <cstring> 또는 #include <string.h>를 통해 strcpy(), strcmp(), strlen() 등의 C 라이브러리 함수를 사용 가능
<cstring> 권장

(배열의 크기 - 1) 만큼 배열에 문자를 저장 가능
언어에 따라 문자의 크기는 다를 수 있음 (영어 1바이트, 한글 2바이트 등)

